{"uid":"5ae47b29ce95bc91","name":"User is able to login,this should fail","fullName":"tests.test_login.TestLogin#test_user_login","historyId":"156d8f497cfb2d6c2f80e1b63e77e862","time":{"start":1683299287467,"stop":1683299287467,"duration":0},"description":"User is able to login","descriptionHtml":"<p>User is able to login</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55e29d1d6fe3 <unknown>\n#1 0x55e29cf15d36 <unknown>\n#2 0x55e29cf52c4d <unknown>\n#3 0x55e29cf52d61 <unknown>\n#4 0x55e29cf8e6a4 <unknown>\n#5 0x55e29cf738ed <unknown>\n#6 0x55e29cf8c232 <unknown>\n#7 0x55e29cf73693 <unknown>\n#8 0x55e29cf4603a <unknown>\n#9 0x55e29cf4717e <unknown>\n#10 0x55e29d198dbd <unknown>\n#11 0x55e29d19cc6c <unknown>\n#12 0x55e29d1a64b0 <unknown>\n#13 0x55e29d19dd63 <unknown>\n#14 0x55e29d170c35 <unknown>\n#15 0x55e29d1c1138 <unknown>\n#16 0x55e29d1c12c7 <unknown>\n#17 0x55e29d1cf093 <unknown>\n#18 0x7fb344af7b43 <unknown>","statusTrace":"request = <SubRequest 'setup' for <Function test_user_login>>\n\n    @pytest.fixture(scope=\"function\")\n    def setup(request:pytest.FixtureRequest):\n        browser=request.config.getoption(\"--browser\")\n        if(browser in(\"chrome\",\"chrome_headless\")):\n            chrome_options = webdriver.ChromeOptions()\n            chrome_options.set_capability(\n                    \"goog:loggingPrefs\", { \"browser\": \"ALL\"}\n                )\n    \n        match browser:\n            case \"chrome\":\n                driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)\n            case \"chrome_headless\":\n                chrome_options.add_argument(\"headless=new\")\n                driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)\n            case \"firefox\":\n                firefox_options= webdriver.FirefoxOptions()\n                firefox_options.headless= True\n                driver = webdriver.Firefox(service=FirefoxService(GeckoDriverManager().install()),options=firefox_options)\n        driver.get(\"https://sporty.com/news/latest\")\n        # make sure the page is loaded\n        wait= WebDriverWait(driver,30)\n>       wait.until(expected_conditions.visibility_of_element_located(((By.XPATH,\"//*[contains(text(),'Customise your')]\"))))\n\ntests/conftest.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"615d187d229c97960ab7b86767753008\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f745845da20>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55e29d1d6fe3 <unknown>\nE       #1 0x55e29cf15d36 <unknown>\nE       #2 0x55e29cf52c4d <unknown>\nE       #3 0x55e29cf52d61 <unknown>\nE       #4 0x55e29cf8e6a4 <unknown>\nE       #5 0x55e29cf738ed <unknown>\nE       #6 0x55e29cf8c232 <unknown>\nE       #7 0x55e29cf73693 <unknown>\nE       #8 0x55e29cf4603a <unknown>\nE       #9 0x55e29cf4717e <unknown>\nE       #10 0x55e29d198dbd <unknown>\nE       #11 0x55e29d19cc6c <unknown>\nE       #12 0x55e29d1a64b0 <unknown>\nE       #13 0x55e29d19dd63 <unknown>\nE       #14 0x55e29d170c35 <unknown>\nE       #15 0x55e29d1c1138 <unknown>\nE       #16 0x55e29d1c12c7 <unknown>\nE       #17 0x55e29d1cf093 <unknown>\nE       #18 0x7fb344af7b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1683299287468,"stop":1683299327300,"duration":39832},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55e29d1d6fe3 <unknown>\n#1 0x55e29cf15d36 <unknown>\n#2 0x55e29cf52c4d <unknown>\n#3 0x55e29cf52d61 <unknown>\n#4 0x55e29cf8e6a4 <unknown>\n#5 0x55e29cf738ed <unknown>\n#6 0x55e29cf8c232 <unknown>\n#7 0x55e29cf73693 <unknown>\n#8 0x55e29cf4603a <unknown>\n#9 0x55e29cf4717e <unknown>\n#10 0x55e29d198dbd <unknown>\n#11 0x55e29d19cc6c <unknown>\n#12 0x55e29d1a64b0 <unknown>\n#13 0x55e29d19dd63 <unknown>\n#14 0x55e29d170c35 <unknown>\n#15 0x55e29d1c1138 <unknown>\n#16 0x55e29d1c12c7 <unknown>\n#17 0x55e29d1cf093 <unknown>\n#18 0x7fb344af7b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/selenium-python/selenium-python/tests/conftest.py\", line 45, in setup\n    wait.until(expected_conditions.visibility_of_element_located(((By.XPATH,\"//*[contains(text(),'Customise your')]\"))))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"afterStages":[],"labels":[{"name":"story","value":"Login functionality"},{"name":"epic","value":"Login functionality"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az453-30"},{"name":"thread","value":"2141-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('setup')"]},"source":"5ae47b29ce95bc91.json","parameterValues":[]}