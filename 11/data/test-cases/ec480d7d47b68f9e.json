{"uid":"ec480d7d47b68f9e","name":"User is able to change country code","fullName":"tests.test_login.TestLogin#test_country_code_change","historyId":"326de79410bf5e80a41e2bbea3e523a5","time":{"start":1683297086155,"stop":1683297086155,"duration":0},"description":"User is able to change country code","descriptionHtml":"<p>User is able to change country code</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558f8f26ffe3 <unknown>\n#1 0x558f8efaed36 <unknown>\n#2 0x558f8efebc4d <unknown>\n#3 0x558f8efebd61 <unknown>\n#4 0x558f8f0276a4 <unknown>\n#5 0x558f8f00c8ed <unknown>\n#6 0x558f8f025232 <unknown>\n#7 0x558f8f00c693 <unknown>\n#8 0x558f8efdf03a <unknown>\n#9 0x558f8efe017e <unknown>\n#10 0x558f8f231dbd <unknown>\n#11 0x558f8f235c6c <unknown>\n#12 0x558f8f23f4b0 <unknown>\n#13 0x558f8f236d63 <unknown>\n#14 0x558f8f209c35 <unknown>\n#15 0x558f8f25a138 <unknown>\n#16 0x558f8f25a2c7 <unknown>\n#17 0x558f8f268093 <unknown>\n#18 0x7f4745076b43 <unknown>","statusTrace":"request = <SubRequest 'setup' for <Function test_country_code_change[country_code_data1]>>\n\n    @pytest.fixture(scope=\"function\")\n    def setup(request:pytest.FixtureRequest):\n        browser=request.config.getoption(\"--browser\")\n        if(browser in(\"chrome\",\"chrome_headless\")):\n            chrome_options = webdriver.ChromeOptions()\n            chrome_options.set_capability(\n                    \"goog:loggingPrefs\", { \"browser\": \"ALL\"}\n                )\n    \n        match browser:\n            case \"chrome\":\n                driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)\n            case \"chrome_headless\":\n                chrome_options.add_argument(\"headless=new\")\n                driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)\n            case \"firefox\":\n                driver = webdriver.Firefox(service=FirefoxService(GeckoDriverManager().install()))\n        driver.get(\"https://sporty.com/news/latest\")\n        # make sure the page is loaded\n        wait= WebDriverWait(driver,30)\n>       wait.until(expected_conditions.visibility_of_element_located(((By.XPATH,\"//*[contains(text(),'Customise your')]\"))))\n\ntests/conftest.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9293cc31a919d37abfb899f9668903ca\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fcdbcdd9e10>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x558f8f26ffe3 <unknown>\nE       #1 0x558f8efaed36 <unknown>\nE       #2 0x558f8efebc4d <unknown>\nE       #3 0x558f8efebd61 <unknown>\nE       #4 0x558f8f0276a4 <unknown>\nE       #5 0x558f8f00c8ed <unknown>\nE       #6 0x558f8f025232 <unknown>\nE       #7 0x558f8f00c693 <unknown>\nE       #8 0x558f8efdf03a <unknown>\nE       #9 0x558f8efe017e <unknown>\nE       #10 0x558f8f231dbd <unknown>\nE       #11 0x558f8f235c6c <unknown>\nE       #12 0x558f8f23f4b0 <unknown>\nE       #13 0x558f8f236d63 <unknown>\nE       #14 0x558f8f209c35 <unknown>\nE       #15 0x558f8f25a138 <unknown>\nE       #16 0x558f8f25a2c7 <unknown>\nE       #17 0x558f8f268093 <unknown>\nE       #18 0x7f4745076b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1683297086155,"stop":1683297125586,"duration":39431},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x558f8f26ffe3 <unknown>\n#1 0x558f8efaed36 <unknown>\n#2 0x558f8efebc4d <unknown>\n#3 0x558f8efebd61 <unknown>\n#4 0x558f8f0276a4 <unknown>\n#5 0x558f8f00c8ed <unknown>\n#6 0x558f8f025232 <unknown>\n#7 0x558f8f00c693 <unknown>\n#8 0x558f8efdf03a <unknown>\n#9 0x558f8efe017e <unknown>\n#10 0x558f8f231dbd <unknown>\n#11 0x558f8f235c6c <unknown>\n#12 0x558f8f23f4b0 <unknown>\n#13 0x558f8f236d63 <unknown>\n#14 0x558f8f209c35 <unknown>\n#15 0x558f8f25a138 <unknown>\n#16 0x558f8f25a2c7 <unknown>\n#17 0x558f8f268093 <unknown>\n#18 0x7f4745076b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/selenium-python/selenium-python/tests/conftest.py\", line 43, in setup\n    wait.until(expected_conditions.visibility_of_element_located(((By.XPATH,\"//*[contains(text(),'Customise your')]\"))))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},{"name":"country_code_data","time":{"start":1683297128338,"stop":1683297128339,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"epic","value":"Login functionality"},{"name":"story","value":"Login functionality"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az452-464"},{"name":"thread","value":"2177-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"country_code_data","value":"{'country': 'Albania', 'code': '+355'}"}],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('setup')"]},"source":"ec480d7d47b68f9e.json","parameterValues":["{'country': 'Albania', 'code': '+355'}"]}