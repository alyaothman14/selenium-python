{"uid":"78bbf16d99641684","name":"User is able to change country code","fullName":"tests.test_login.TestLogin#test_country_code_change","historyId":"b3fd85ef19f2a584247374779ac47c1a","time":{"start":1683292130654,"stop":1683292161133,"duration":30479},"description":"User is able to change country code","descriptionHtml":"<p>User is able to change country code</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f5f84b58820>\ncountry_code_data = {'code': '+93', 'country': 'Afghanistan'}\n\n    @allure.description(\"User is able to change country code\")\n    @allure.title(\"User is able to change country code\")\n    def test_country_code_change(self,country_code_data):\n           self.nav_bar.click_login_icon()\n>          self.login_page.click_code_country()\n\ntests/test_login.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:55: in click_code_country\n    self.click(self.COUNTRY_CODE_COMBOBOX)\npages/base_page.py:17: in click\n    element: WebElement = self.wait.until(expected_conditions.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"dce97112de48e4eb514b930412bd0ec0\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f5f838b6560>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"attach_artifacts_on_failure","time":{"start":1683292127954,"stop":1683292127954,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1683292127954,"stop":1683292130654,"duration":2700},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"country_code_data","time":{"start":1683292130654,"stop":1683292130654,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"User is able to change country code","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f5f84b58820>\ncountry_code_data = {'code': '+93', 'country': 'Afghanistan'}\n\n    @allure.description(\"User is able to change country code\")\n    @allure.title(\"User is able to change country code\")\n    def test_country_code_change(self,country_code_data):\n           self.nav_bar.click_login_icon()\n>          self.login_page.click_code_country()\n\ntests/test_login.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:55: in click_code_country\n    self.click(self.COUNTRY_CODE_COMBOBOX)\npages/base_page.py:17: in click\n    element: WebElement = self.wait.until(expected_conditions.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"dce97112de48e4eb514b930412bd0ec0\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f5f838b6560>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"User clicks login icon in nav bar","time":{"start":1683292130654,"stop":1683292130786,"duration":132},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"User clicks to change country code","time":{"start":1683292130786,"stop":1683292161132,"duration":30346},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/login_page.py\", line 55, in click_code_country\n    self.click(self.COUNTRY_CODE_COMBOBOX)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/base_page.py\", line 17, in click\n    element: WebElement = self.wait.until(expected_conditions.visibility_of_element_located(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"attach_artifacts_on_failure::0","time":{"start":1683292161145,"stop":1683292161262,"duration":117},"status":"passed","steps":[],"attachments":[{"uid":"22f7614997ecd61d","name":"Console Logs","source":"22f7614997ecd61d.json","type":"application/json","size":518},{"uid":"45e053d71326a56f","name":"Screenshot","source":"45e053d71326a56f.png","type":"image/png","size":37491}],"parameters":[],"stepsCount":0,"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true},{"name":"setup::0","time":{"start":1683292161145,"stop":1683292161145,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"epic","value":"Login functionality"},{"name":"story","value":"Login functionality"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az442-882"},{"name":"thread","value":"2180-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"country_code_data","value":"{'country': 'Afghanistan', 'code': '+93'}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('setup')"]},"source":"78bbf16d99641684.json","parameterValues":["{'country': 'Afghanistan', 'code': '+93'}"]}