{"uid":"63e3ced9ab1fa1a1","name":"User is able to login,this should fail","fullName":"tests.test_login.TestLogin#test_user_login","historyId":"156d8f497cfb2d6c2f80e1b63e77e862","time":{"start":1683294026233,"stop":1683294057264,"duration":31031},"description":"User is able to login","descriptionHtml":"<p>User is able to login</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fbc26838280>\n\n    @allure.description(\"User is able to login\")\n    @allure.title(\"User is able to login,this should fail\")\n    def test_user_login(self):\n>          self.login_page.login_existing_user(\"01116888790\",\"test\",\"alyaothman\")\n\ntests/test_login.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:49: in login_existing_user\n    self.fill_password(password)\npages/login_page.py:38: in fill_password\n    self.fill_text(self.PASSWORD,password)\npages/base_page.py:23: in fill_text\n    element: WebElement = self.wait.until(expected_conditions.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8ebcaabcd1947e1bb0639902bbae8a13\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fbc249c7880>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":2,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1683294023132,"stop":1683294026232,"duration":3100},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"attach_artifacts_on_failure","time":{"start":1683294023132,"stop":1683294023132,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"testStage":{"description":"User is able to login","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_login.TestLogin object at 0x7fbc26838280>\n\n    @allure.description(\"User is able to login\")\n    @allure.title(\"User is able to login,this should fail\")\n    def test_user_login(self):\n>          self.login_page.login_existing_user(\"01116888790\",\"test\",\"alyaothman\")\n\ntests/test_login.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:49: in login_existing_user\n    self.fill_password(password)\npages/login_page.py:38: in fill_password\n    self.fill_text(self.PASSWORD,password)\npages/base_page.py:23: in fill_text\n    element: WebElement = self.wait.until(expected_conditions.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8ebcaabcd1947e1bb0639902bbae8a13\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7fbc249c7880>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"User logs in","time":{"start":1683294026233,"stop":1683294057264,"duration":31031},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/login_page.py\", line 49, in login_existing_user\n    self.fill_password(password)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/login_page.py\", line 38, in fill_password\n    self.fill_text(self.PASSWORD,password)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/base_page.py\", line 23, in fill_text\n    element: WebElement = self.wait.until(expected_conditions.visibility_of_element_located(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"User clicks login icon in nav bar","time":{"start":1683294026233,"stop":1683294026367,"duration":134},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"Fill phone number","time":{"start":1683294026367,"stop":1683294027107,"duration":740},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"phone_number","value":"'01116888790'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0},{"name":"User clicks start exploring","time":{"start":1683294027107,"stop":1683294027202,"duration":95},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"User fill password","time":{"start":1683294027202,"stop":1683294057263,"duration":30061},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/login_page.py\", line 38, in fill_password\n    self.fill_text(self.PASSWORD,password)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/base_page.py\", line 23, in fill_text\n    element: WebElement = self.wait.until(expected_conditions.visibility_of_element_located(locator))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"password","value":"'test'"}],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[{"name":"phone_number","value":"'01116888790'"},{"name":"password","value":"'test'"},{"name":"username","value":"'alyaothman'"}],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":4}],"attachments":[{"uid":"a83a597560960389","name":"log","source":"a83a597560960389.txt","type":"text/plain","size":1094}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":5},"afterStages":[{"name":"setup::0","time":{"start":1683294057276,"stop":1683294057276,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"attach_artifacts_on_failure::0","time":{"start":1683294057276,"stop":1683294057408,"duration":132},"status":"passed","steps":[],"attachments":[{"uid":"2c69753043dc75df","name":"Console Logs","source":"2c69753043dc75df.json","type":"application/json","size":500},{"uid":"8f61577f7225418f","name":"Screenshot","source":"8f61577f7225418f.png","type":"image/png","size":34695}],"parameters":[],"attachmentsCount":2,"shouldDisplayMessage":false,"hasContent":true,"stepsCount":0}],"labels":[{"name":"epic","value":"Login functionality"},{"name":"story","value":"Login functionality"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az548-835"},{"name":"thread","value":"2186-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"73c18716ac44531f","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1683293991792,"stop":1683294022929,"duration":31137}},{"uid":"ee91158a744e7d39","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x55607d8e8fe3 <unknown>\n#1 0x55607d627d36 <unknown>\n#2 0x55607d664c4d <unknown>\n#3 0x55607d664d61 <unknown>\n#4 0x55607d6a06a4 <unknown>\n#5 0x55607d6858ed <unknown>\n#6 0x55607d69e232 <unknown>\n#7 0x55607d685693 <unknown>\n#8 0x55607d65803a <unknown>\n#9 0x55607d65917e <unknown>\n#10 0x55607d8aadbd <unknown>\n#11 0x55607d8aec6c <unknown>\n#12 0x55607d8b84b0 <unknown>\n#13 0x55607d8afd63 <unknown>\n#14 0x55607d882c35 <unknown>\n#15 0x55607d8d3138 <unknown>\n#16 0x55607d8d32c7 <unknown>\n#17 0x55607d8e1093 <unknown>\n#18 0x7f20dbb0ab43 <unknown>","time":{"start":1683293949010,"stop":1683293949010,"duration":0}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('setup')"]},"source":"63e3ced9ab1fa1a1.json","parameterValues":[]}