{"uid":"afbc45dc9a8ab58b","name":"User is able to login,this should fail","fullName":"tests.test_login.TestLogin#test_user_login","historyId":"24b8bb284d4476cda4fd604cb992a989","time":{"start":1683314589386,"stop":1683314620915,"duration":31529},"description":"User is able to login","descriptionHtml":"<p>User is able to login</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f037fd348e0>\n\n    @allure.description(\"User is able to login\")\n    @allure.title(\"User is able to login,this should fail\")\n    def test_user_login(self):\n>       self.login_page.login_existing_user(\n            \"01116888790\", \"test\", \"alyaothman\")\n\ntests/test_login.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:54: in login_existing_user\n    self.fill_password(password)\npages/login_page.py:43: in fill_password\n    self.fill_text(self.PASSWORD, password)\npages/base_page.py:26: in fill_text\n    element: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ce645f4a-ab33-4f73-8817-f4e7e2d2bca0\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f037f00fd90>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1683314584658,"stop":1683314589385,"duration":4727},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"User is able to login","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <tests.test_login.TestLogin object at 0x7f037fd348e0>\n\n    @allure.description(\"User is able to login\")\n    @allure.title(\"User is able to login,this should fail\")\n    def test_user_login(self):\n>       self.login_page.login_existing_user(\n            \"01116888790\", \"test\", \"alyaothman\")\n\ntests/test_login.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/login_page.py:54: in login_existing_user\n    self.fill_password(password)\npages/login_page.py:43: in fill_password\n    self.fill_text(self.PASSWORD, password)\npages/base_page.py:26: in fill_text\n    element: WebElement = self.wait.until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ce645f4a-ab33-4f73-8817-f4e7e2d2bca0\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f037f00fd90>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[{"name":"User logs in","time":{"start":1683314589386,"stop":1683314620914,"duration":31528},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/login_page.py\", line 54, in login_existing_user\n    self.fill_password(password)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/login_page.py\", line 43, in fill_password\n    self.fill_text(self.PASSWORD, password)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/base_page.py\", line 26, in fill_text\n    element: WebElement = self.wait.until(\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"User clicks login icon in nav bar","time":{"start":1683314589386,"stop":1683314589985,"duration":599},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Fill phone number","time":{"start":1683314589985,"stop":1683314590473,"duration":488},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"phone_number","value":"'01116888790'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"User clicks start exploring","time":{"start":1683314590474,"stop":1683314590817,"duration":343},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"User fill password","time":{"start":1683314590818,"stop":1683314620914,"duration":30096},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/login_page.py\", line 43, in fill_password\n    self.fill_text(self.PASSWORD, password)\n  File \"/home/runner/work/selenium-python/selenium-python/pages/base_page.py\", line 26, in fill_text\n    element: WebElement = self.wait.until(\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[{"name":"password","value":"'test'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[{"name":"phone_number","value":"'01116888790'"},{"name":"password","value":"'test'"},{"name":"username","value":"'alyaothman'"}],"stepsCount":4,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"1cc0d72a593d3170","name":"stderr","source":"1cc0d72a593d3170.txt","type":"text/plain","size":262}],"parameters":[],"stepsCount":5,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setup::0","time":{"start":1683314620928,"stop":1683314621740,"duration":812},"status":"passed","steps":[],"attachments":[{"uid":"4e4e88ecdda007f7","name":"Screenshot","source":"4e4e88ecdda007f7.png","type":"image/png","size":110415}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true}],"labels":[{"name":"tag","value":"firefox"},{"name":"story","value":"Login functionality"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az359-409"},{"name":"thread","value":"1738-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"browser","value":"'firefox'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"9ef06d7452434b5a","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message:","time":{"start":1683314552017,"stop":1683314583889,"duration":31872}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["firefox","@pytest.mark.usefixtures('setup')"]},"source":"afbc45dc9a8ab58b.json","parameterValues":["'firefox'"]}