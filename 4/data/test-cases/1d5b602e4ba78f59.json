{"uid":"1d5b602e4ba78f59","name":"User is not allowed to enter alpha characters","fullName":"tests.test_login.TestLogin#test_invalid_input_number","historyId":"3f4d1291f67c4cd8748668c4b83c4596","time":{"start":1683293232378,"stop":1683293232378,"duration":0},"description":"User is not allowed to enter alpha characters","descriptionHtml":"<p>User is not allowed to enter alpha characters</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561281304fe3 <unknown>\n#1 0x561281043d36 <unknown>\n#2 0x561281080c4d <unknown>\n#3 0x561281080d61 <unknown>\n#4 0x5612810bc6a4 <unknown>\n#5 0x5612810a18ed <unknown>\n#6 0x5612810ba232 <unknown>\n#7 0x5612810a1693 <unknown>\n#8 0x56128107403a <unknown>\n#9 0x56128107517e <unknown>\n#10 0x5612812c6dbd <unknown>\n#11 0x5612812cac6c <unknown>\n#12 0x5612812d44b0 <unknown>\n#13 0x5612812cbd63 <unknown>\n#14 0x56128129ec35 <unknown>\n#15 0x5612812ef138 <unknown>\n#16 0x5612812ef2c7 <unknown>\n#17 0x5612812fd093 <unknown>\n#18 0x7faf45d5bb43 <unknown>","statusTrace":"request = <SubRequest 'setup' for <Function test_invalid_input_number>>\n\n    @pytest.fixture(scope=\"function\")\n    def setup(request:pytest.FixtureRequest):\n        browser=request.config.getoption(\"--browser\")\n        if(browser in(\"chrome\",\"chrome_headless\")):\n            chrome_options = webdriver.ChromeOptions()\n            chrome_options.set_capability(\n                    \"goog:loggingPrefs\", {\"performance\": \"ALL\", \"browser\": \"ALL\"}\n                )\n            chrome_options.add_argument(\"disable-dev-shm-usage\")\n    \n        match browser:\n            case \"chrome\":\n                driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)\n            case \"chrome_headless\":\n                chrome_options.add_argument(\"headless=new\")\n                driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)\n            case \"firefox\":\n                driver = webdriver.Firefox(service=FirefoxService(GeckoDriverManager().install()))\n        driver.get(\"https://sporty.com/news/latest\")\n        # make sure the page is loaded\n        wait= WebDriverWait(driver,30)\n>       wait.until(expected_conditions.visibility_of_element_located(((By.XPATH,\"//*[contains(text(),'Customise your')]\"))))\n\ntests/conftest.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a0c6c75ae503252bcd74c7c63952beb6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f61e1435cf0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x561281304fe3 <unknown>\nE       #1 0x561281043d36 <unknown>\nE       #2 0x561281080c4d <unknown>\nE       #3 0x561281080d61 <unknown>\nE       #4 0x5612810bc6a4 <unknown>\nE       #5 0x5612810a18ed <unknown>\nE       #6 0x5612810ba232 <unknown>\nE       #7 0x5612810a1693 <unknown>\nE       #8 0x56128107403a <unknown>\nE       #9 0x56128107517e <unknown>\nE       #10 0x5612812c6dbd <unknown>\nE       #11 0x5612812cac6c <unknown>\nE       #12 0x5612812d44b0 <unknown>\nE       #13 0x5612812cbd63 <unknown>\nE       #14 0x56128129ec35 <unknown>\nE       #15 0x5612812ef138 <unknown>\nE       #16 0x5612812ef2c7 <unknown>\nE       #17 0x5612812fd093 <unknown>\nE       #18 0x7faf45d5bb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"attach_artifacts_on_failure","time":{"start":1683293232379,"stop":1683293232379,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1683293232379,"stop":1683293271817,"duration":39438},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561281304fe3 <unknown>\n#1 0x561281043d36 <unknown>\n#2 0x561281080c4d <unknown>\n#3 0x561281080d61 <unknown>\n#4 0x5612810bc6a4 <unknown>\n#5 0x5612810a18ed <unknown>\n#6 0x5612810ba232 <unknown>\n#7 0x5612810a1693 <unknown>\n#8 0x56128107403a <unknown>\n#9 0x56128107517e <unknown>\n#10 0x5612812c6dbd <unknown>\n#11 0x5612812cac6c <unknown>\n#12 0x5612812d44b0 <unknown>\n#13 0x5612812cbd63 <unknown>\n#14 0x56128129ec35 <unknown>\n#15 0x5612812ef138 <unknown>\n#16 0x5612812ef2c7 <unknown>\n#17 0x5612812fd093 <unknown>\n#18 0x7faf45d5bb43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 39, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 902, in call_fixture_func\n    fixture_result = next(generator)\n  File \"/home/runner/work/selenium-python/selenium-python/tests/conftest.py\", line 44, in setup\n    wait.until(expected_conditions.visibility_of_element_located(((By.XPATH,\"//*[contains(text(),'Customise your')]\"))))\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py\", line 95, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"testStage":{"description":"User is not allowed to enter alpha characters","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x561281304fe3 <unknown>\n#1 0x561281043d36 <unknown>\n#2 0x561281080c4d <unknown>\n#3 0x561281080d61 <unknown>\n#4 0x5612810bc6a4 <unknown>\n#5 0x5612810a18ed <unknown>\n#6 0x5612810ba232 <unknown>\n#7 0x5612810a1693 <unknown>\n#8 0x56128107403a <unknown>\n#9 0x56128107517e <unknown>\n#10 0x5612812c6dbd <unknown>\n#11 0x5612812cac6c <unknown>\n#12 0x5612812d44b0 <unknown>\n#13 0x5612812cbd63 <unknown>\n#14 0x56128129ec35 <unknown>\n#15 0x5612812ef138 <unknown>\n#16 0x5612812ef2c7 <unknown>\n#17 0x5612812fd093 <unknown>\n#18 0x7faf45d5bb43 <unknown>","statusTrace":"request = <SubRequest 'setup' for <Function test_invalid_input_number>>\n\n    @pytest.fixture(scope=\"function\")\n    def setup(request:pytest.FixtureRequest):\n        browser=request.config.getoption(\"--browser\")\n        if(browser in(\"chrome\",\"chrome_headless\")):\n            chrome_options = webdriver.ChromeOptions()\n            chrome_options.set_capability(\n                    \"goog:loggingPrefs\", {\"performance\": \"ALL\", \"browser\": \"ALL\"}\n                )\n            chrome_options.add_argument(\"disable-dev-shm-usage\")\n    \n        match browser:\n            case \"chrome\":\n                driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)\n            case \"chrome_headless\":\n                chrome_options.add_argument(\"headless=new\")\n                driver = webdriver.Chrome(service=ChromeService(ChromeDriverManager().install()),options=chrome_options)\n            case \"firefox\":\n                driver = webdriver.Firefox(service=FirefoxService(GeckoDriverManager().install()))\n        driver.get(\"https://sporty.com/news/latest\")\n        # make sure the page is loaded\n        wait= WebDriverWait(driver,30)\n>       wait.until(expected_conditions.visibility_of_element_located(((By.XPATH,\"//*[contains(text(),'Customise your')]\"))))\n\ntests/conftest.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a0c6c75ae503252bcd74c7c63952beb6\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x7f61e1435cf0>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x561281304fe3 <unknown>\nE       #1 0x561281043d36 <unknown>\nE       #2 0x561281080c4d <unknown>\nE       #3 0x561281080d61 <unknown>\nE       #4 0x5612810bc6a4 <unknown>\nE       #5 0x5612810a18ed <unknown>\nE       #6 0x5612810ba232 <unknown>\nE       #7 0x5612810a1693 <unknown>\nE       #8 0x56128107403a <unknown>\nE       #9 0x56128107517e <unknown>\nE       #10 0x5612812c6dbd <unknown>\nE       #11 0x5612812cac6c <unknown>\nE       #12 0x5612812d44b0 <unknown>\nE       #13 0x5612812cbd63 <unknown>\nE       #14 0x56128129ec35 <unknown>\nE       #15 0x5612812ef138 <unknown>\nE       #16 0x5612812ef2c7 <unknown>\nE       #17 0x5612812fd093 <unknown>\nE       #18 0x7faf45d5bb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException","steps":[],"attachments":[{"uid":"53b18ad484a4e47f","name":"log","source":"53b18ad484a4e47f.txt","type":"text/plain","size":2189}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"attach_artifacts_on_failure::0","time":{"start":1683293271826,"stop":1683293271829,"duration":3},"status":"broken","statusMessage":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=59963): Max retries exceeded with url: /session/78c98cd584c6f3748351260cc1be7720/se/log (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f61e12bb6d0>: Failed to establish a new connection: [Errno 111] Connection refused'))\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 918, in _teardown_yield_fixture\n    next(it)\n  File \"/home/runner/work/selenium-python/selenium-python/tests/conftest.py\", line 64, in attach_artifacts_on_failure\n    allure.attach(body=json.dumps(request.cls.driver.get_log(\"browser\"), indent=4), name=\"Console Logs\",attachment_type=allure.attachment_type.JSON)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 1118, in get_log\n    return self.execute(Command.GET_LOG, {\"type\": log_type})[\"value\"]\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 438, in execute\n    response = self.command_executor.execute(driver_command, params)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py\", line 290, in execute\n    return self._request(command_info[0], url, body=data)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/selenium/webdriver/remote/remote_connection.py\", line 311, in _request\n    response = self._conn.request(method, url, body=body, headers=headers)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/urllib3/request.py\", line 78, in request\n    return self.request_encode_body(\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/urllib3/request.py\", line 170, in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/urllib3/poolmanager.py\", line 376, in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 815, in urlopen\n    return self.urlopen(\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 815, in urlopen\n    return self.urlopen(\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 815, in urlopen\n    return self.urlopen(\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/urllib3/connectionpool.py\", line 787, in urlopen\n    retries = retries.increment(\n  File \"/opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/urllib3/util/retry.py\", line 592, in increment\n    raise MaxRetryError(_pool, url, error or ResponseError(cause))\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"labels":[{"name":"epic","value":"Login functionality"},{"name":"story","value":"Login functionality"},{"name":"tag","value":"@pytest.mark.usefixtures('setup')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_login"},{"name":"subSuite","value":"TestLogin"},{"name":"host","value":"fv-az168-260"},{"name":"thread","value":"2161-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["@pytest.mark.usefixtures('setup')"]},"source":"1d5b602e4ba78f59.json","parameterValues":[]}